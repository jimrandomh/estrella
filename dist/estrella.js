#!/usr/bin/env node
var __create=Object.create;var __defProp=Object.defineProperty;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __getOwnPropNames=Object.getOwnPropertyNames;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __markAsModule=target=>__defProp(target,"__esModule",{value:true});var __commonJS=(callback,module2)=>()=>{if(!module2){module2={exports:{}};callback(module2.exports,module2)}return module2.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __exportStar=(target,module2,desc)=>{if(module2&&typeof module2==="object"||typeof module2==="function"){for(let key of __getOwnPropNames(module2))if(!__hasOwnProp.call(target,key)&&key!=="default")__defProp(target,key,{get:()=>module2[key],enumerable:!(desc=__getOwnPropDesc(module2,key))||desc.enumerable})}return target};var __toModule=module2=>{return __exportStar(__markAsModule(__defProp(module2!=null?__create(__getProtoOf(module2)):{},"default",module2&&module2.__esModule&&"default"in module2?{get:()=>module2.default,enumerable:true}:{value:module2,enumerable:true})),module2)};var require_miniglob=__commonJS(exports2=>{var E=Object.defineProperty;var z=e=>E(e,"__esModule",{value:true});var L=(e,t)=>{z(e);for(var r in t)E(e,r,{get:t[r],enumerable:true})};L(exports2,{PatternError:()=>a,glob:()=>W,match:()=>y});var{readdirSync:_,statSync:D}=require("fs");var h=(()=>{try{return require("path").sep}catch(e){return"/"}})();var u=h.charCodeAt(0);var T=h==":"?/\:+/g:h=="\\"?/\\+/g:/\/+/g;var x=process.platform=="win32";var a=class extends Error{constructor(){super("bad pattern")}};function W(e){if(e.indexOf("**")<0)return S(e);let t=[],r=new Set;return m("",e.split(/\*{2,}/),0,t,r),t}function c(){}var Y=x?e=>{if(e.length<2)return 0;let t=e[0];return e[1]==":"&&("a"<=t&&t<="z"||"A"<=t&&t<="Z")?2:0}:e=>0;var Z=x?(e,t)=>{let r=t(e);return e==""?[0,"."]:r+1==e.length&&B(e,e.length-1)?[r+1,e]:r==e.length&&e.length==2?[r,e+"."]:(r>=e.length&&(r=e.length-1),[r,e.substr(0,e.length-1)])}:(e,t)=>e==""?[t,"."]:e==h?[t,e]:[t,e.substr(0,e.length-1)];function B(e,t){return e.charCodeAt(t)===u}function H(e){let t=e.length-1,r=t;for(;e.charCodeAt(r)===u;)r--;return r!=t?e.substr(0,r+1):e}function J(e){let t=0,r=t;for(;e.charCodeAt(r)===u;)r++;return r!=t?e.substr(r):e}function m(e,t,r,l,n){r>=t.length&&(r=t.length-1);let i=t[r],o=i;r===0?i.charCodeAt(i.length-1)!=u&&(o+="*"):r===t.length-1?i.charCodeAt(0)!=u&&(o="*"+o):(i.charCodeAt(0)!=u&&(o="*"+o),i.charCodeAt(i.length-1)!=u&&(o+="*"));function f(s){return n.has(s)?false:(n.add(s),true)}function w(s){let g=s,A=g.lastIndexOf(h);A!=-1&&(g=g.substr(A+1));let F=Math.min(r+1,t.length-1),b=t.slice(F).join("*");b.charCodeAt(0)==u?b=J(b):b[0]!="*"&&(b="*"+b),y(b,g)&&l.push(s)}e&&(o[0]!=h?o=e+h+o:o=e+o);let d=false;o.charCodeAt(o.length-1)===u&&(d=true,o=H(o));let C=S(o);for(let s of C){let g=D(s);g.isDirectory()?f(s)&&K(s,(A,F)=>{f(A)&&(F.isDirectory()?m(A,t,r+1,l,n):w(A))}):!d&&f(s)&&w(s)}return l}function K(e,t){e=N(e);let r=D(e);r.isDirectory()&&R(e,t,new Set([r.ino]))}function R(e,t,r){for(let l of _(e)){let n=j(e,l),i=P(n),o=t(n,i);(o||o===void 0)&&i&&i.isDirectory()&&!r.has(i.ino)&&(r.add(i.ino),R(n,t,r))}}function S(e){let t=[];if(!G(e))return P(e)?[e]:t;let r=Y(e),l=e.length-1;for(;l>=r&&!B(e,l);)l--;let n=e.substr(0,l+1),i=e.substr(l+1);if([r,n]=Z(n,r),!G(n.substr(r)))q(n,i,t);else{if(n==e)throw new a;let o=S(n);for(let f of o)q(f,i,t)}return t}function q(e,t,r){let l=P(e);if(l===null)return;if(!l.isDirectory())return;let n;try{n=_(e)}catch(i){return}n.sort();for(let i of n)y(t,i)&&r.push(j(e,i))}function G(e){for(let t=0;t<e.length;++t)switch(e.charCodeAt(t)){case 42:case 63:case 91:case 123:return true}return false}function Q(e,t){for(let r=0;r<e.length;++r)if(e.charCodeAt(r)===t)return true;return false}function y(e,t){e:for(;e.length>0;){let r=false,l="",n=e;if([r,l,e]=U(e),c("scanChunk(%o) => %o",n,[r,l,e]),r&&l=="")return c("ret"),!Q(t,u);let[i,o]=M(l,t);if(c("matchChunk(%o, %o) => %o",l,t,[i,o]),o&&(i.length==0||e.length>0)){t=i;continue}if(r){for(let f=0;f<t.length&&t.charCodeAt(f)!=u;f++)if([i,o]=M(l,t.substr(f+1)),o){if(e.length==0&&i.length>0)continue;t=i;continue e}}return false}return t.length==0}function U(e){let t=false;for(;e.length>0&&e.charCodeAt(0)==42;)e=e.substr(1),t=true;let r=false,l=0>>0;e:for(;l<e.length;l++)switch(e.charCodeAt(l)){case 92:x||l+1<e.length&&l++;break;case 91:r=true;break;case 93:r=false;break;case 42:if(!r)break e;break}return[t,e.substr(0,l),e.substr(l)]}function M(e,t){for(c("enter matchChunk(%o, %o)",e,t);e.length>0;){if(t.length==0)return["",false];switch(e.charCodeAt(0)){case 91:{let n=t.codePointAt(0),i=n<=65535?1:2;if(t=t.substr(i),e=e.substr(1),c('"[" s reduced to %o, chunk reduced to %o, r = 0x%s',t,e,n.toString(16)),e.length==0)throw new a;let o=e.charCodeAt(0)==94;o&&(c('"[" negation from "^"'),e=e.substr(1));let f=false,w=0;for(;;){if(e.length>0&&e.charCodeAt(0)==93&&w>0){c('"[" loop break at A'),e=e.substr(1);break}let d,C,s=e;if([C,e,d]=O(e),c('"[" loop getEsc(%o) => %o',s,[C,e,d]),!d)return c('"[" loop return at B from failed getEsc'),["",false];let g=C;if(e.charCodeAt(0)==45&&([g,e,d]=O(e.substr(1)),!d))return["",false];C<=n&&n<=g&&(f=true),w++}if(f==o)return["",false];break}case 63:if(t.charCodeAt(0)==u)return["",false];let r=t.codePointAt(0),l=r<=65535?1:2;t=t.substr(l),e=e.substr(1);break;case 92:if(!x&&(c('"\\" consume'),e=e.substr(1),e.length==0))throw new a;default:if(e.charCodeAt(0)!=t.charCodeAt(0))return c("[def] chunk[0] != s[0] (%o != %o) (0x%s != 0x%s) -- return",e[0],t[0],e.charCodeAt(0).toString(16),t.charCodeAt(0).toString(16)),["",false];t=t.substr(1),e=e.substr(1),c("[def] s reduced to %o, chunk reduced to %o",t,e);break}}return[t,true]}function O(e){let t=0,r="",l=e.charCodeAt(0);if(e.length==0||l==45||l==93)throw new a;if(l==92&&!x&&(e=e.substr(1),e.length==0))throw new a;t=e.codePointAt(0);let n=t<=65535?1:2;if(t==65535&&n==1)throw new a;if(r=e.substr(n),r.length==0)throw new a;return[t,r,true]}function P(e){try{return D(e)}catch(t){}return null}function j(e,t){return e=="."||e==""?t:e+h+t}function N(e){let t=e.length-1,r=t;for(;r&&e.charCodeAt(r)===u;)--r;return r!=t&&(e=e.substr(0,r+1)),e.split(T).join(h)}});var require_util=__commonJS((exports2,module2)=>{__markAsModule(exports2);__export(exports2,{TYPE:()=>TYPE2,clock:()=>clock3,expandTildePath:()=>expandTildePath2,findInPATH:()=>findInPATH3,fmtByteSize:()=>fmtByteSize2,fmtDuration:()=>fmtDuration2,getModulePackageJSON:()=>getModulePackageJSON,isCLI:()=>isCLI3,isWindows:()=>isWindows3,json:()=>json7,jsonparse:()=>jsonparse2,jsonparseFile:()=>jsonparseFile4,repr:()=>repr4,resolveModulePackageFile:()=>resolveModulePackageFile,runtimeRequire:()=>runtimeRequire3,tildePath:()=>tildePath4,tmpdir:()=>tmpdir2});var fs10=__toModule(require("fs"));var Path7=__toModule(require("path"));var os4=__toModule(require("os"));var import_perf_hooks=__toModule(require("perf_hooks"));var import_util14=__toModule(require("util"));var json7=(val,pretty,showHidden)=>JSON.stringify(val,showHidden,pretty);var clock3=()=>import_perf_hooks.performance.now();var isWindows3=process.platform.startsWith("win");var TYPE2=Symbol("TYPE");function runtimeRequire3(id){try{return _runtimeRequire(id)}catch{return null}}runtimeRequire3.resolve=id=>{try{return _runtimeRequire.resolve(id)}catch{return""}};var isCLI3=module2.id=="."||process.mainModule.filename==__filename;function repr4(val,prettyOrOptions){let options={colors:stdoutStyle.ncolors>0};if(typeof prettyOrOptions=="object"){options={...prettyOrOptions}}else if(prettyOrOptions!==void 0){options.compact=!prettyOrOptions}return(0,import_util14.inspect)(val,options)}function resolveModulePackageFile(moduleSpec){const mainfile=runtimeRequire3.resolve(moduleSpec);let dir=Path7.dirname(Path7.resolve(mainfile));let lastdir=Path7.sep;while(dir!=lastdir){let pfile=Path7.join(dir,"package.json");if(fs10.existsSync(pfile)){return pfile}dir=Path7.dirname(dir)}throw new Error(`package.json not found for module ${moduleSpec}`)}function getModulePackageJSON(moduleSpec){const pfile=resolveModulePackageFile(moduleSpec);return jsonparseFile4(pfile)}var _tmpdir="";function tmpdir2(){if(!_tmpdir){_tmpdir=fs10.realpathSync.native(os4.tmpdir())}return _tmpdir}function fmtDuration2(ms){return ms>=59500?(ms/6e4).toFixed(0)+"min":ms>=999.5?(ms/1e3).toFixed(1)+"s":ms.toFixed(2)+"ms"}function fmtByteSize2(bytes){return bytes>=1024*1e3?(bytes/(1024*1e3)).toFixed(1)+"MB":bytes>=1e3?(bytes/1024).toFixed(1)+"kB":bytes+"B"}function findInPATH3(executableName){const exeFileMode=isWindows3?4294967295:fs10.constants.X_OK;const PATH=new Set((process.env.PATH||"").split(Path7.delimiter));for(let dir of PATH){let path=Path7.join(Path7.resolve(dir),executableName);if(isWindows3){path+=".cmd"}while(true){try{let st=fs10.statSync(path);if(st.isSymbolicLink()){path=fs10.realpathSync.native(path);continue}else if(st.isFile()&&st.mode&exeFileMode){return path}}catch(_){if(isWindows3&&path.endsWith(".cmd")){path=Path7.join(Path7.resolve(dir),executableName)+".exe";continue}}break}}return null}function jsonparse2(jsonText,filename){try{return JSON.parse(json7)}catch(err){return require("vm").runInNewContext("("+jsonText+")",{},{filename,displayErrors:true})}}function jsonparseFile4(filename){const json8=fs10.readFileSync(filename,"utf8");try{return jsonparse2(json8)}catch(err){throw new Error(`failed to parse ${filename}: ${err.message||err}`)}}function expandTildePath2(path){const homedir2=os4.homedir();if(path=="~"){return homedir2}if(path.startsWith("~"+Path7.sep)){return homedir2+path.substr(1)}return path}function tildePath4(path){const s=Path7.resolve(path);const homedir2=os4.homedir();if(s.startsWith(homedir2)){return"~"+s.substr(homedir2.length)}return s}});var require_error=__commonJS(exports2=>{__markAsModule(exports2);__export(exports2,{UserError:()=>UserError4,bugReportMessage:()=>bugReportMessage2,captureStackTrace:()=>captureStackTrace2,printErrorAndExit:()=>printErrorAndExit});var UserError4=class extends Error{constructor(msg){super(msg);this.name="UserError"}};function captureStackTrace2(cons,sourcemap){const Error_prepareStackTrace2=Error.prepareStackTrace;if(!sourcemap){Error.prepareStackTrace=void 0}let stack="";try{const e={};Error.captureStackTrace(e,cons);stack=e.stack}finally{Error.prepareStackTrace=Error_prepareStackTrace2}return stack}function bugReportMessage2(mode,reportContextField){return debug().bugReportMessage(mode,reportContextField)}function printErrorAndExit(err,origin){return debug().printErrorAndExit(err,origin)}function Error_prepareStackTrace(error,stack){Error.prepareStackTrace=void 0;try{debug().installSourceMapSupport();if(Error.prepareStackTrace!==Error_prepareStackTrace){return Error.prepareStackTrace(error,stack)}}catch(_){}return error.stack||String(error)}Error.prepareStackTrace=Error_prepareStackTrace;process.on("uncaughtException",printErrorAndExit);process.on("unhandledRejection",(reason,_promise)=>{printErrorAndExit(reason||"PromiseRejection","unhandledRejection")})});var esbuild2=__toModule(require("esbuild"));var fs9=__toModule(require("fs"));var os3=__toModule(require("os"));var Path6=__toModule(require("path"));var glob=__toModule(require_miniglob());var Path3=__toModule(require("path"));function numColors(w,hint){let ncolors=0;if(hint===true){let t=process.env.TERM||"";ncolors=t&&["xterm","screen","vt100"].some(s=>t.indexOf(s)!=-1)?t.indexOf("256color")!=-1?8:4:2}else if(hint!==false&&w.isTTY){ncolors=w.getColorDepth()}return ncolors}function termStyle(w,hint){return createTermStyle(numColors(w,hint),hint)}function createTermStyle(ncolors,hint){const CODE=s=>`[${s}m`;const effect=ncolors>0||hint?(open,close)=>{const a=CODE(open),b=CODE(close);return s=>a+s+b}:_=>s=>s;const color=ncolors>=8?(_open16,open256,close)=>{let a="["+open256+"m",b="["+close+"m";return s=>a+s+b}:ncolors>0?(open16,_open256,close)=>{let a="["+open16+"m",b="["+close+"m";return s=>a+s+b}:(_open16,_open256,_close)=>s=>s;return{_hint:hint,ncolors,reset:hint||ncolors>0?"e[0m":"",bold:effect("1","22"),italic:effect("3","23"),underline:effect("4","24"),inverse:effect("7","27"),white:color("37","38;2;255;255;255","39"),grey:color("90","38;5;244","39"),black:color("30","38;5;16","39"),blue:color("34","38;5;75","39"),cyan:color("36","38;5;87","39"),green:color("32","38;5;84","39"),magenta:color("35","38;5;213","39"),purple:color("35","38;5;141","39"),pink:color("35","38;5;211","39"),red:color("31","38;2;255;110;80","39"),yellow:color("33","38;5;227","39"),lightyellow:color("93","38;5;229","39"),orange:color("33","38;5;215","39"),reconfigure(w,hint2){const ncolors2=numColors(w,hint2);if(ncolors2!=this.ncolors&&hint2!=this._hint){Object.assign(this,createTermStyle(ncolors2,hint2))}return this}}}var stdoutStyle=termStyle(process.stdout);var stderrStyle=termStyle(process.stderr);var import_util4=__toModule(require_util());var import_console=__toModule(require("console"));var Path=__toModule(require("path"));var import_util=__toModule(require_util());var prog=(()=>{const $_=process.env["_"];const scriptfile=process.argv[1];if(!scriptfile){return $_||process.argv[0]}if($_&&!Path.isAbsolute($_)){return $_}let prefix="";if($_){const nodeExecName=Path.basename(process.execPath);if($_.endsWith(Path.sep+nodeExecName)){prefix=nodeExecName+" "}}if(scriptfile.startsWith(process.cwd())){let rel=Path.relative(process.cwd(),scriptfile);if(!rel.startsWith("node_modules"+Path.sep)&&rel.indexOf(Path.sep+"node_modules"+Path.sep)==-1){if(Path.sep=="/"){rel="./"+rel}return rel}}return prefix+Path.basename(scriptfile)})();function parseopt(argv,doc){let[flagmap,opts]=parseFlags(doc.flags.filter(f=>f));let options={};let help=false;let args=[];let i=0;const eatArg=()=>{args.push(argv.splice(i,1)[0]);i--};for(;i<argv.length;i++){let arg=argv[i];if(arg=="--"){i++;break}if(arg[0]!="-"||arg=="-"){eatArg();continue}arg=arg.replace(/^\-+/,"");let eqp=arg.indexOf("=");let argval=void 0;if(eqp!=-1){argval=arg.substr(eqp+1);arg=arg.substr(0,eqp)}let opt=flagmap.get(arg);if(!opt){if(arg=="h"||arg=="help"){help=true;if(!doc.help){console.log(fmtUsage(opts,doc.usage,doc.trailer));process.exit(0)}}else if(doc.unknownFlagAsArg){eatArg();continue}else{printUnknownOptionsAndExit([argv[i]])}break}let value=true;if(opt.valueName){if(argval===void 0){argval=argv[i+1];if(argval!==void 0&&argval[0]!="-"){i++}else{console.error(`missing value for option -${arg} (see ${prog} -help)`);process.exit(1);break}}try{value=opt.valueParser?opt.valueParser(argval):argval}catch(err){console.error(`invalid value for option -${arg} (${err.message})`)}}else if(argval!==void 0){console.error(`unexpected value provided for flag -${arg}`);process.exit(1)}options[arg]=value;for(let alias of opt.names){if(alias==arg){continue}options[alias]=value}}if(i<argv.length){args=args.concat(argv.slice(i))}if(help&&doc.help){doc.help(opts,options,args)}return[options,args]}function printUnknownOptionsAndExit(args){console.error(`unknown option${args.length>1?"s":""} ${args.join(", ")} (see ${prog} -help)`);process.exit(1)}function parseFlags(flags){let fimap=new Map;let fiv=[];for(let f of flags){let fi=parseFlag(f);fiv.push(fi);for(let k of fi.names){if(fimap.has(k)){throw new Error(`duplicate CLI flag ${(0,import_util.json)(k)} in definition ${(0,import_util.json)(f)}`)}fimap.set(k,fi)}}return[fimap,fiv]}function parseFlag(f){const cleanFlag=s=>s.replace(/(?:^|[\s,])\-+/g,"");const splitComma=s=>s.split(/\s*,\s*/);if(typeof f=="string"){return{names:splitComma(cleanFlag(f))}}let o={names:typeof f[0]=="string"?splitComma(cleanFlag(f[0])):f[0].map(cleanFlag),description:f[1]||void 0};if(f[2]){let[name,type]=f[2].replace(/^[<>]+|[<>]+$/g,"").split(/:/,2);if(type){switch(type.toLowerCase()){case"string":case"str":type="string";break;case"bool":case"boolean":type="boolean";o.valueParser=s=>{s=s.toLowerCase();return s!="false"&&s!="0"&&s!="no"&&s!="off"};break;case"number":case"num":case"float":case"int":type="number";o.valueParser=s=>{let n=Number(s);if(isNaN(n)){throw new Error(`${(0,import_util.json)(s)} is not a number`)}return n};break;default:throw new Error(`invalid argument type "${type}"`)}}else{type="string"}o.valueName=name||type;o.valueType=type}return o}function fmtUsage(opts,usage,trailer){let vars={prog,"0":prog};const subvars=s2=>s2.replace(/\$(\w+)/g,(_,v)=>{let sub=vars[v];if(!sub){throw new Error(`unknown variable $${v} (to print a dollar sign, use '\\$')`)}return sub});let s=subvars(usage?typeof usage=="function"?usage():String(usage):opts.length>0?`Usage: $prog [options]`:`Usage: $prog`);if(opts.length>0){s+="\noptions:\n";let longestFlagName=0;let flagNames=[];for(let f of opts){let flagName="  -"+(f.valueName?f.names.join("=,-")+"="+(f.valueType=="boolean"?"on|off":"<"+f.valueName+">"):f.names.join(", -"));longestFlagName=Math.max(longestFlagName,flagName.length);flagNames.push(flagName)}for(let i=0;i<opts.length;i++){let f=opts[i];let names=flagNames[i];let descr=f.description;if(!f.description){descr=f.valueType?"Set ":"Enable "+f.names.reduce((a,s2)=>s2.length>a.length?s2:a,"")}s+=`${names.padEnd(longestFlagName," ")}  ${descr}`;if(i+1<opts.length){s+="\n"}}}if(trailer){s+="\n"+subvars(trailer.replace(/[\n\s]+$/,""))}return s}var import_error=require_error();var LogLevel;(function(LogLevel3){LogLevel3[LogLevel3["Silent"]=-1]="Silent";LogLevel3[LogLevel3["Error"]=0]="Error";LogLevel3[LogLevel3["Warn"]=1]="Warn";LogLevel3[LogLevel3["Info"]=2]="Info";LogLevel3[LogLevel3["Debug"]=3]="Debug"})(LogLevel||(LogLevel={}));var log_console=console;var log_colorMode=void 0;var log=new class Log{constructor(){this.SILENT=-1;this.ERROR=0;this.WARN=1;this.INFO=2;this.DEBUG=3;this.level=2;this.infoOnce=this.info;this.debug=log_debug}error(...v){if(log.level>=0){evalFunctionInArgs(v);log_console.error(stderrStyle.red(`${prog}:`),...v)}}warn(...v){if(log.level>=1){evalFunctionInArgs(v);log_console.error(stderrStyle.magenta(`${prog}:`),...v)}}info(...v){if(log.level>=2){evalFunctionInArgs(v);log_console.log(...v)}}get colorMode(){return log_colorMode}set colorMode(colorMode){if(log_colorMode===colorMode){return}log_colorMode=colorMode;if(colorMode===void 0){log_console=console}else{log_console=new import_console.Console({stdout:process.stdout,stderr:process.stderr,colorMode})}}};var log_default=log;function evalFunctionInArgs(args){if(typeof args[0]=="function"){args[0]=args[0]()}}function log_debug(...v){if(log.level>=3){let meta="";if(1){const stack=(0,import_error.captureStackTrace)(log_debug);const frames=stack.split("\n",5);const f=frames[1];let m=f&&/at (\w+)/.exec(f);if(m){meta=" "+m[1]}else if(!m&&frames[2]){if(m=frames[2]&&/at (\w+)/.exec(frames[2])){meta=` ${m[1]} \u2192 ${stdoutStyle.italic("f")}`}}}evalFunctionInArgs(v);if(v.length==0||v.length==1&&(v[0]===""||v[0]===void 0)){return}log_console.log(stdoutStyle.bold(stdoutStyle.blue(`[DEBUG${meta}]`)),...v)}}var file_exports={};__export(file_exports,{_ts_check_file:()=>_ts_check_file,file:()=>file,fileModificationLog:()=>fileModificationLog,fileModificationLogAppend:()=>fileModificationLogAppend,fileWasModifiedRecentlyByUser:()=>fileWasModifiedRecentlyByUser,scandir:()=>scandir});var fs2=__toModule(require("fs"));var Path2=__toModule(require("path"));var crypto=__toModule(require("crypto"));var fs=__toModule(require("fs"));var import_util2=__toModule(require_util());var chr=String.fromCharCode;var ord=(s,offs)=>s.charCodeAt(offs||0);function chmod2(file2,modifier){if(typeof modifier=="number"){fs.chmodSync(file2,modifier);return modifier}let mode=fs.statSync(file2).mode;let newMode=editFileMode(mode,modifier);if(mode!=newMode){fs.chmodSync(file2,newMode)}return newMode}function chmodp(file2,modifier){return new Promise((resolve3,reject)=>{if(typeof modifier=="number"){return fs.chmod(file2,modifier,err=>{err?reject(err):resolve3(modifier)})}fs.stat(file2,(err,st)=>{if(err)return reject(err);let newMode=editFileMode(st.mode,modifier);if(st.mode==newMode){return resolve3(newMode)}fs.chmod(file2,newMode,err2=>{err2?reject(err2):resolve3(newMode)})})})}function editFileMode(mode,modifier){const expectedFormat=`Expected format: [ugoa]*[+-=][rwx]+`;const err=(msg,m)=>new Error(`${msg} in modifier ${(0,import_util2.json)(m)}. ${expectedFormat}`);let mods=[];for(let m of Array.isArray(modifier)?modifier:[modifier]){mods=mods.concat(m.trim().split(/\s*,+\s*/))}for(let m of mods){let who=[];let all=false;let op=0;let perm=0;for(let i=0;i<m.length;i++){let c=ord(m,i);if(op==0){switch(c){case 117:case 103:case 111:if(!all){who.push(c)}break;case 97:who=[117,103,111];all=true;break;case 43:case 45:case 61:op=c;break;default:if(op==0){throw err(`Invalid target or operation ${(0,import_util2.json)(chr(c))}`,m)}break}}else{switch(c){case 114:perm|=4;break;case 119:perm|=2;break;case 120:perm|=1;break;default:throw err(`Invalid permission ${(0,import_util2.json)(chr(c))}`,m)}}}if(op==0){throw err(`Missing operation`,m)}if(who.length==0){who=[117]}if(perm==0){perm=4|2|1}let mode2=0;for(let w of who){switch(w){case 117:mode2|=perm<<6;break;case 103:mode2|=perm<<3;break;case 111:mode2|=perm;break}}switch(op){case 43:mode|=mode2;break;case 45:mode&=~mode2;break;case 61:mode=mode2;break}}return mode}if(1){const asserteq=require("assert").strictEqual;const oct=v=>"0o"+v.toString(8).padStart(3,"0");const samples=[[292,["u+r"],292],[292,["u+x"],356],[292,["u+w"],420],[292,["u+wx"],484],[292,["u+rwx"],484],[292,["u+r,u+w,u+x"],484],[292,["u+r","u+w,u+x"],484],[292,["u+"],484],[511,["u-r"],255],[511,["u-wx"],319],[511,["u-w"],383],[511,["u-x"],447],[511,["u-"],63],[511,["u-rwx"],63],[292,["g+r"],292],[292,["g+x"],300],[292,["g+w"],308],[292,["g+wx"],316],[292,["g+rwx"],316],[292,["g+"],316],[511,["g-r"],479],[511,["g-wx"],487],[511,["g-w"],495],[511,["g-x"],503],[511,["g-"],455],[511,["g-rwx"],455],[292,["o+r"],292],[292,["o+x"],293],[292,["o+w"],294],[292,["o+wx"],295],[292,["o+rwx"],295],[292,["o+"],295],[511,["o-r"],507],[511,["o-wx"],508],[511,["o-w"],509],[511,["o-x"],510],[511,["o-"],504],[511,["o-rwx"],504],[292,["ug+r"],292],[292,["ug+x"],364],[292,["ug+w"],436],[292,["ug+wx"],508],[292,["ug+rwx"],508],[292,["ug+"],508],[292,["ugo+r"],292],[292,["a+r"],292],[292,["ugo+x"],365],[292,["a+x"],365],[292,["ugo+w"],438],[292,["a+w"],438],[292,["ugo+wx"],511],[292,["a+wx"],511],[292,["ugo+rwx"],511],[292,["a+rwx"],511],[292,["ugo+"],511],[292,["a+"],511],[511,["ug-r"],223],[511,["ug-wx"],295],[511,["ug-w"],367],[511,["ug-x"],439],[511,["ug-"],7],[511,["ug-rwx"],7],[511,["ugo-r"],219],[511,["a-r"],219],[511,["ugo-wx"],292],[511,["a-wx"],292],[511,["ugo-w"],365],[511,["a-w"],365],[511,["ugo-x"],438],[511,["a-x"],438],[511,["ugo-"],0],[511,["a-"],0],[511,["ugo-rwx"],0],[511,["a-rwx"],0]];samples.map(([input,mods,expect])=>{let actual=editFileMode(input,mods);asserteq(actual,expect,`editFileMode(${oct(input)}, ${(0,import_util2.json)(mods)}) => ${oct(actual)} != expected ${oct(expect)}`)})}var import_util3=__toModule(require_util());var fsp=fs2.promises;var fileModificationLog={};function fileModificationLogAppend(filename){fileModificationLog[Path2.resolve(String(filename))]=(0,import_util3.clock)()}function fileWasModifiedRecentlyByUser(filename){const ageThreshold=3e4;const time=fileModificationLog[Path2.resolve(filename)];return time!==void 0&&(0,import_util3.clock)()-time<=ageThreshold}var _ts_check_file=file;function file(filename,options){return fsp.readFile(filename,options)}file.editMode=editFileMode;file.chmod=(filename,modifier)=>{fileModificationLogAppend(filename);return chmodp(filename,modifier)};function read(filename,options){return fsp.readFile(filename,options)}file.read=read;function readSync(filename,options){return fs2.readFileSync(filename,options)}file.readSync=readSync;file.stat=fsp.stat;function mtime(...filenames){return Promise.all(filenames.map(filename=>fsp.stat(filename).then(st=>st.mtimeMs).catch(_=>null))).then(r=>r.length==1?r[0]:r)}file.mtime=mtime;file.readall=(...filenames)=>Promise.all(filenames.map(fn=>fsp.readFile(fn)));file.readallText=(encoding,...filenames)=>Promise.all(filenames.map(fn=>fsp.readFile(fn,{encoding:encoding||"utf8"})));file.write=async(filename,data,options)=>{fileModificationLogAppend(filename);const opt=options&&typeof options=="object"?options:{};try{await fsp.writeFile(filename,data,options)}catch(err){if(!opt.mkdirOff&&err.code=="ENOENT"){await file.mkdirs(Path2.dirname(String(filename)),opt.mkdirMode);await fsp.writeFile(filename,data,options)}else{throw err}}if(opt.log){let relpath=Path2.relative(process.cwd(),String(filename));if(relpath.startsWith(".."+Path2.sep)){relpath=(0,import_util3.tildePath)(filename)}log_default.info(stdoutStyle.green(`Wrote ${relpath}`))}};file.writeSync=(filename,data,options)=>{fileModificationLogAppend(filename);fs2.writeFileSync(filename,data,options)};function sha1(filename,outputEncoding){return new Promise((resolve3,reject)=>{const reader=fs2.createReadStream(filename);const h=crypto.createHash("sha1");reader.on("error",reject);reader.on("end",()=>{h.end();resolve3(outputEncoding?h.digest(outputEncoding):h.digest())});reader.pipe(h)})}file.sha1=sha1;file.copy=(srcfile,dstfile,failIfExist)=>{let mode=fs2.constants.COPYFILE_FICLONE;if(failIfExist){mode|=fs2.constants.COPYFILE_EXCL}fileModificationLogAppend(dstfile);return fsp.copyFile(srcfile,dstfile,mode)};file.move=(oldfile,newfile)=>{fileModificationLogAppend(newfile);return fsp.rename(oldfile,newfile)};file.mkdirs=(dir,mode)=>{return fsp.mkdir(dir,{recursive:true,mode}).then(s=>!!s&&s.length>0)};async function scandir(dir,filter,options){if(!options){options={}}if(!fs2.promises||!fs2.promises.opendir){throw new Error(`scandir not implemented for nodejs <12.12.0`)}const files=[];const visited=new Set;const maxdepth=options.recursive!==void 0?options.recursive?Infinity:0:options.depth!==void 0?options.depth:Infinity;async function visit(dir2,reldir,depth){if(visited.has(dir2)){return}visited.add(dir2);const d=await fs2.promises.opendir(dir2);for await(const ent of d){let name=ent.name;if(ent.isDirectory()){if(maxdepth<depth){await visit(Path2.join(dir2,name),Path2.join(reldir,name),depth+1)}}else if(ent.isFile()||ent.isSymbolicLink()){if(filter&&filter.test(name)){files.push(Path2.join(reldir,name))}}}}const dirs=Array.isArray(dir)?dir:[dir];return Promise.all(dirs.map(dir2=>visit(Path2.resolve(dir2),".",0))).then(()=>files.sort())}var estrellaDir=__dirname;function createLazyModuleAccessor(filename){let m=null;return function getLazyModule(){if(!m){log.debug(`loading ${filename} module`);m=(0,import_util4.runtimeRequire)(Path3.join(estrellaDir,filename));m.initModule(log.level,file_exports)}return m}}var debug=createLazyModuleAccessor(1?"debug.g.js":"debug.js");var watch=createLazyModuleAccessor(1?"watch.g.js":"watch.js");function assert2(cond,msg,cons){if(1){if(cond){return}const message="assertion failure: "+(msg||cond);const e=new Error(message);e.name="AssertionError";const obj={};Error.captureStackTrace(obj,cons||assert2);if(obj.stack){e.stack=message+"\n"+obj.stack.split("\n").slice(1).join("\n")}if(assert2.throws){throw e}require_error().printErrorAndExit(e,"assert")}}assert2.throws=false;global["assert"]=assert2;var import_error4=require_error();var import_util13=__toModule(require_util());var import_util5=__toModule(require_util());var memoizeMap=new Map;var isMemoized=Symbol("isMemoized");var stdoutIsTTY=!!process.stdout.isTTY;var stderrIsTTY=!!process.stderr.isTTY;var screen={width:60,height:20,clear(){},banner(ch){if(!ch){ch="-"}return ch.repeat(Math.floor((screen.width-1)/ch.length))}};if(stdoutIsTTY||stderrIsTTY){const ws=stdoutIsTTY&&process.stdout||process.stderr;const updateScreenSize=()=>{screen.width=ws.columns;screen.height=ws.rows};ws.on("resize",updateScreenSize);updateScreenSize();screen.clear=()=>{ws.write("c")}}var Path5=__toModule(require("path"));var fs4=__toModule(require("fs"));var import_child_process=__toModule(require("child_process"));var import_util7=__toModule(require_util());var Path4=__toModule(require("path"));var fs3=__toModule(require("fs"));var import_util6=__toModule(require_util());var TS_CONFIG_FILE=Symbol("TS_CONFIG_FILE");var TS_CONFIG=Symbol("TS_CONFIG");var{dirname:dirname2,basename:basename2}=Path4;function findTSC(cwd){let npmPath="";let tmpcwd=process.cwd();const exe=import_util6.isWindows?"tsc.cmd":"tsc";if(cwd){process.chdir(cwd)}try{npmPath=require.resolve("typescript")}catch(_){}if(cwd){process.chdir(tmpcwd)}if(npmPath){const find=Path4.sep+"node_modules"+Path4.sep;let i=npmPath.indexOf(find);if(i!=-1){return Path4.join(npmPath.substr(0,i+find.length-Path4.sep.length),".bin",exe)}}return exe}function findTSConfigFile(dir,maxParentDir){for(let path of searchTSConfigFile(dir,maxParentDir)){try{const st=fs3.statSync(path);if(st.isFile()){return path}}catch(_){}}return null}function*searchTSConfigFile(dir,maxParentDir){dir=Path4.resolve(dir);const root=Path4.parse(dir).root;maxParentDir=maxParentDir?Path4.resolve(maxParentDir):root;while(true){yield Path4.join(dir,"tsconfig.json");if(dir==maxParentDir){break}dir=dirname2(dir);if(dir==root){break}}}function tsConfigFileSearchDirForConfig(config){let dir=config.cwd||process.cwd();if(config.entryPoints&&Object.keys(config.entryPoints).length>0){let firstEntryPoint="";if(Array.isArray(config.entryPoints)){firstEntryPoint=config.entryPoints[0]}else{for(let outfile of Object.keys(config.entryPoints)){firstEntryPoint=config.entryPoints[outfile];break}}dir=Path4.resolve(dir,Path4.dirname(firstEntryPoint))}return dir}function getTSConfigFileForConfig(config){let file2=config[TS_CONFIG_FILE];if(file2===void 0){if(config.tslint==="off"||config.tslint===false||config.tsc==="off"||config.tsc===false){file2=null}else{let dir=tsConfigFileSearchDirForConfig(config);file2=findTSConfigFile(dir,config.cwd)}Object.defineProperty(config,TS_CONFIG_FILE,{value:file2})}return file2}function getTSConfigForConfig(config){let tsconfig=config[TS_CONFIG];if(tsconfig===void 0){const file2=getTSConfigFileForConfig(config);if(file2)try{tsconfig=(0,import_util6.jsonparseFile)(file2)}catch(err){log_default.warn(()=>`failed to parse ${file2}: ${err.stack||err}`)}if(!tsconfig){tsconfig=null}Object.defineProperty(config,TS_CONFIG,{value:tsconfig})}return tsconfig}var import_error2=require_error();var{dirname:dirname3,basename:basename3}=Path5;var defaultTSRules={6031:"IGNORE",6194:"IGNORE",6133:"WARNING",2531:"WARNING",7006:"WARNING",7015:"WARNING",7053:"WARNING"};var IGNORE=0;var INFO=1;var WARNING=2;var ERROR=3;var severities={IGNORE,INFO,WARNING,ERROR};function addTSRules(dst,src){for(let k of Object.keys(src)){let v=severities[String(src[k]).toUpperCase()];if(v===void 0){throw new import_error2.UserError(`Invalid value for TS rule ${k}: ${(0,import_util7.json)(v)} -- expected value to be one of: `+Object.keys(severities).map(import_util7.json).join(", "))}dst[k]=v}}function tslint(options){if(!options){options={}}let cancellation={cancelled:false,cancel(){}};let p=new Promise((resolve3,reject)=>{if(options.mode=="off"){return resolve3(true)}const cwd=options.cwd||process.cwd();let tsconfigFile=options.tsconfigFile;if(tsconfigFile===void 0){tsconfigFile=findTSConfigFile(options.srcdir?Path5.resolve(cwd,options.srcdir):cwd)}if(options.mode!="on"&&!tsconfigFile){return resolve3(true)}const options_format=options.format?options.format.toLowerCase():"";const logShortInfo=options_format.startsWith("short");const logShortWarning=options_format.startsWith("short");const logShortError=options_format=="short-all";let tscprog=findTSC(options.cwd);if(tscprog=="tsc"&&options.mode!="on"){if(!(tscprog=(0,import_util7.findInPATH)(tscprog))){log_default.warn(`tsc not found in node_modules or PATH. However a tsconfig.json file was found in `+Path5.relative(process.cwd(),dirname3(tsconfigFile))+`. Set tslint options.tslint="off" or pass -no-diag on the command line to disable tsc.`);return resolve3(true)}}const tsrules={};addTSRules(tsrules,defaultTSRules);if(options.rules){addTSRules(tsrules,options.rules)}let args=["--noEmit",options.colors&&"--pretty",options.watch&&"--watch",tsconfigFile&&"--project",tsconfigFile].concat(options.args||[]).filter(a=>a);log_default.debug(()=>`spawning process ${tscprog} ${(0,import_util7.json)(args,2)}`);const p2=(0,import_child_process.spawn)(tscprog,args,{stdio:["inherit","pipe","inherit"],cwd});const onProcessExitHandler=()=>{try{p2.kill()}catch(_){}};process.on("exit",onProcessExitHandler);cancellation.cancel=()=>{p2.kill()};const infoStyle=s=>s,warnStyle=stdoutStyle.orange,errorStyle=stdoutStyle.red,okStyle=stdoutStyle.green;const _TS_buf=Buffer.from(" TS");const Found__buf=Buffer.from("Found ");const ANSI_clear_buf=Buffer.from("c");const Starting_compilation_buf=Buffer.from("tarting compilation");const Starting_incremental_compilation_buf=Buffer.from("tarting incremental compilation");const tsmsgbuf=[];let tscode=0;let lastRunHadErrors=false;let stats={errors:0,warnings:0,other:0,reset(){this.errors=0;this.warnings=0;this.other=0}};let isIdle=false;function onSessionEnd(){if(!options.quiet||stats.errors>=0){options.watch&&console.log(screen.banner("\u2014"));let summary=[];if(stats.errors>0){summary.push(errorStyle("TS: "+plural(`$ error`,`$ errors`,stats.errors)))}else{summary.push(okStyle("TS: OK"))}if(stats.warnings>0){summary.push(warnStyle(plural(`$ warning`,`$ warnings`,stats.warnings)))}if(stats.other>0){summary.push(plural(`$ message`,`$ messages`,stats.other))}console.log(summary.join("   "));options.watch&&console.log(screen.banner("\u2014"))}lastRunHadErrors=stats.errors>0;options.onEnd&&options.onEnd(stats);stats.reset();isIdle=true}function flushTSMessage(compilationPassCompleted){let lines=tsmsgbuf.slice();tsmsgbuf.length=0;if(tscode==0){let i=0;let line0=lines[i++];while(line0.length==0||line0[0]==10&&i<lines.length){line0=lines[i++]}if(line0.includes(Starting_compilation_buf)||line0.includes(Starting_incremental_compilation_buf)){stats.reset();return compilationPassCompleted&&onSessionEnd()}if(lines.every(line=>line.length<=1)){return compilationPassCompleted&&onSessionEnd()}}else{const errorRe=/(?:\x1b\[\d+m|)error(?:\x1b\[\d+m|)/g;let line0=lines.shift().toString("utf8");switch(tsrules[tscode]){case IGNORE:return compilationPassCompleted&&onSessionEnd();case INFO:line0=line0.replace(errorRe,infoStyle("info"));if(logShortInfo){lines=[]}else{restyleSrcLineWaves(lines,infoStyle)}stats.other++;break;case WARNING:line0=line0.replace(errorRe,warnStyle("warning"));if(logShortWarning){lines=[]}else{restyleSrcLineWaves(lines,warnStyle)}stats.warnings++;break;default:if(logShortError){lines=[]}if(errorRe.test(line0)){stats.errors++}else{stats.other++}break}process.stdout.write(line0)}lines.forEach(v=>process.stdout.write(v));compilationPassCompleted&&onSessionEnd()}function restyleSrcLineWaves(lines,stylefn){for(let i=1;i<lines.length;i++){let line=lines[i];if(line.includes(126)){let s=line.toString("utf8");s=s.replace(/\x1b\[\d+m(\s*~+)/g,stylefn("$1"));lines[i]=s}}}function plural(singular,plural2,n){return(n==1?singular:plural2).replace(/\$/g,n)}lineReader(p2.stdout,(line,flush)=>{if(!options.clearScreen){line=stripANSIClearCode(line)}if(flush){if(line.length>0){tsmsgbuf.push(line)}if(tsmsgbuf.length>0){flushTSMessage()}return}if(isIdle&&line.length>1){isIdle=false;options.onRestart&&options.onRestart()}if(line.includes(Found__buf)){let s=stripANSICodesStr(line.toString("utf8"));if(/^(?:\[[^\]]+\] |[\d\:PAM \-]+|)Found \d+ error/.test(s)){flushTSMessage(true);tscode=0;return}else{flushTSMessage(false)}tscode=0}else{if(line.includes(_TS_buf)){const s=line.toString("utf8");const m=/(?:\x1b\[\d+m|)error(?:\x1b\[\d+m\x1b\[\d+m|) TS(\d+)\:/.exec(s);let tscode2=m?parseInt(m[1]):0;if(tscode2>0&&!isNaN(tscode2)){if(tsmsgbuf.length>0){flushTSMessage()}tscode=tscode2}}}tsmsgbuf.push(line)});p2.on("close",code=>{process.removeListener("exit",onProcessExitHandler);resolve3(!lastRunHadErrors)});function stripANSICodesStr(s){return s.replace(/\x1b\[\d+m/g,"")}function stripANSIClearCode(buf){let i=buf.indexOf(ANSI_clear_buf);return i==-1?buf:i==0?buf.subarray(3):Buffer.concat([buf.subarray(0,i),buf.subarray(i+3)],buf.length-3)}});p.cancel=()=>{if(!cancellation.cancelled){cancellation.cancelled=true;cancellation.cancel()}return p};return p}var emptyBuffer=Buffer.allocUnsafe(0);function lineReader(r,onLine){let bufs=[],bufz=0;const readbuf=data=>{let offs=0;while(true){let i=data.indexOf(10,offs);if(i==-1){if(offs<data.length-1){const chunk=data.subarray(offs);bufs.push(chunk);bufz+=chunk.length}break}i++;let buf=data.subarray(offs,i);if(bufz>0){buf=Buffer.concat(bufs.concat(buf),bufz+buf.length);bufs.length=0;bufz=0}onLine(buf,false);offs=i}};const flush=()=>{if(bufs.length>0){onLine(Buffer.concat(bufs,bufz),true)}else{onLine(emptyBuffer,true)}};r.on("data",readbuf);r.on("close",flush);r.on("end",flush)}var fs8=__toModule(require("fs"));var import_util10=__toModule(require_util());var fs6=__toModule(require("fs"));var os=__toModule(require("os"));var subproc=__toModule(require("child_process"));var import_stream=__toModule(require("stream"));var fs5=__toModule(require("fs"));var import_util8=__toModule(require_util());function isReadableStream(s){return s&&s.read}function isWritableStream(s){return s&&s.write}var emptyBuffer2=Buffer.allocUnsafe(0);function isReader(value){return value&&typeof value=="object"&&value[import_util8.TYPE]=="Reader"}function createReader(stream){return stream?new StreamReader(stream):InvalidReader}function createWriter(stream){return stream?{[import_util8.TYPE]:"Writer",stream}:InvalidWriter}var _a;var InvalidReader=new class{constructor(){this[_a]="Reader"}_E(){return new Error("stream not readable")}get stream(){throw this._E()}[(_a=import_util8.TYPE,Symbol.asyncIterator)](){throw this._E()}read(){return Promise.reject(this._E())}};var _a2,_b;var InvalidWriter=new(_b=class{constructor(){this[_a2]="Writer"}_E(){return new Error("stream not writable")}get stream(){throw this._E()}},_a2=import_util8.TYPE,_b);var _a3;var StreamReader=class{constructor(stream){this[_a3]="Reader";this._ended=false;this.stream=stream;stream.pause();stream.once("end",()=>{this._ended=true})}[(_a3=import_util8.TYPE,Symbol.asyncIterator)](){return this.stream[Symbol.asyncIterator]()}async read(size,encoding){const stream=this.stream;stream.pause();if(typeof size=="string"){encoding=size;size=Number.MAX_SAFE_INTEGER}else if(size===void 0||size===null||size<0){size=Number.MAX_SAFE_INTEGER}else if(size==0){return encoding?"":emptyBuffer2}if(stream.readable){let buf2=stream.read(this._ended?void 0:size);if(buf2){return encoding?buf2.toString(encoding):buf2}}if(this._ended){return encoding?"":emptyBuffer2}const buffers=[];let buffersLen=0;if(stream.readable){const buf2=stream.read();if(buf2){buffers.push(buf2);buffersLen+=buf2.length}}while(buffersLen<size&&!this._ended){await new Promise((resolve3,reject)=>{stream.once("error",reject);stream.once("end",resolve3);stream.once("readable",resolve3)});let buf2=stream.read(size-buffersLen);if(!buf2){buf2=stream.read()}if(buf2){buffers.push(buf2);buffersLen+=buf2.length}}const buf=joinbufs(buffers);return encoding?buf.toString(encoding):buf}};function joinbufs(bufs,totalLength){return bufs.length==0?emptyBuffer2:bufs.length==1?bufs[0]:Buffer.concat(bufs,totalLength)}function createWriteBuffer(){const w=[];let totalLength=0;const push=w.push;w.push=b=>{totalLength+=b.length;return push.call(w,b)};w.buffer=()=>{return joinbufs(w,totalLength)};return w}function errorCodeMsg(errorCode){const libuv_errors=debug().libuv_errors;return libuv_errors[errorCode]||""}function createTimeout(promise,timeout,rejectOnTimeout){const timeoutTimer=setTimeout(()=>{const e=new Error("timeout");e.name="Timeout";rejectOnTimeout(e)},timeout);return promise.then(r=>{clearTimeout(timeoutTimer);return r},e=>{clearTimeout(timeoutTimer);throw e})}var import_util9=__toModule(require_util());var notStartedError="process not started";var Cmd=class{constructor(command,...args){this.dir="";this.env={...process.env};this.shell=false;this.stdin=null;this.stdout=null;this.stderr=null;this.extraFiles=[];this.windowsHide=true;this.process=null;this.running=false;this.pid=0;this.exitCode=-1;this._resolve=()=>{};this._reject=()=>{};this._onerror=err=>{log_default.debug(()=>`${this} error:
${err.stack||err}`);this._reject(err)};this._onexit=(code,signal2)=>{const cmd=this;log_default.debug(()=>`${cmd} exited status=${code} signal=${signal2}`);cmd.running=false;if(code===null||signal2!==null){assert(typeof signal2=="string");cmd.exitCode=-(os.constants.signals[signal2]||1)}else{cmd.exitCode=code||0}cmd._resolve(cmd.exitCode)};this.command=command;this.args=args;this.promise=Promise.reject(new Error(notStartedError));this.promise.catch(_=>{})}start(){return null}run(timeout){this.start();return this.wait(timeout)}output(encoding,timeout){this.stdout="pipe";if(!this.stderr){this.stderr="pipe"}const{stdout,stderr}=this.start();const stdoutBuf=createWriteBuffer();const stderrBuf=createWriteBuffer();stdout.stream.on("data",chunk=>{stdoutBuf.push(chunk)});if(stderr){stderr.stream.on("data",chunk=>{stderrBuf.push(chunk)})}return this.wait(timeout||0).then(exitCode=>{if(exitCode!=0){let errstr="";const errbuf=stderrBuf.buffer();try{errstr=errbuf.toString("utf8")}catch(_){errstr=errbuf.toString("ascii")}if(errstr.length>0){errstr=". stderr output:\n"+errstr}throw new Error(`command exited with status ${exitCode}${errstr}`)}const buf=stdoutBuf.buffer();return encoding?buf.toString(encoding):buf})}wait(timeout,timeoutSignal){if(timeout===void 0||timeout<=0){return this.promise}return this._waitTimeout(timeout,(err,_resolve,reject)=>{log_default.debug(()=>`${this} wait timeout reached; killing process`);err.message="Cmd.wait timeout";return this.kill(timeoutSignal).then(()=>reject(err))})}signal(sig,mode){const p=this._checkproc();if(mode=="group"){try{process.kill(-p.pid,sig);return true}catch(_){}}return p.kill(sig)}async kill(sig="SIGTERM",timeout=500,mode){const p=this._checkproc();if(!this.signal(sig,mode||"group")){return p.exitCode||0}if(timeout<=0){return this.promise}return this._waitTimeout(timeout,(_,resolve3)=>{log_default.debug(()=>`${this} kill timeout reached; sending SIGKILL`);p.kill("SIGKILL");return this.promise.then(resolve3)})}toString(){return this.process?`Cmd[${this.pid}]`:"Cmd"}_checkproc(){if(!this.process){throw new Error(notStartedError)}return this.process}_rejectAndKill(reason){this._reject(reason)}_waitTimeout(timeout,onTimeout){return new Promise((resolve3,reject)=>{let timeoutOccured=false;this.promise.then(exitCode=>{if(!timeoutOccured){resolve3(exitCode)}});return createTimeout(this.promise,timeout,timeoutErr=>{timeoutOccured=true;onTimeout(timeoutErr,resolve3,reject)})})}};Cmd.prototype.start=function start(){const cmd=this;if(cmd.running){throw new Error("start() called while command is running")}cmd.exitCode=-1;cmd.promise=new Promise((res,rej)=>{cmd._resolve=res;cmd._reject=rej});let stdin=null;let stdinStreamNeedsPiping=null;if(cmd.stdin instanceof Buffer){stdin="pipe"}else if(isReader(cmd.stdin)){if(typeof cmd.stdin.stream.fd=="string"){stdin=cmd.stdin.stream}else{stdin="pipe";stdinStreamNeedsPiping=cmd.stdin.stream}}else{stdin=cmd.stdin}const spawnOptions={stdio:[stdin||"ignore",cmd.stdout===process.stdout?1:cmd.stdout||"ignore",cmd.stderr===process.stderr?2:cmd.stderr?cmd.stderr:"ignore",...cmd.extraFiles],cwd:cmd.dir?(0,import_util9.expandTildePath)(cmd.dir):void 0,env:cmd.env,shell:cmd.shell,windowsHide:cmd.windowsHide,detached:!import_util9.isWindows};const p=subproc.spawn(cmd.command,cmd.args,spawnOptions);if(p.pid===void 0){cmd.process=null;cmd.pid=0;const err=guessSpawnError(cmd);cmd._reject(err);throw err}cmd.running=true;cmd.process=p;cmd.pid=p.pid;p.on("exit",cmd._onexit);p.on("error",cmd._reject);log_default.debug(()=>`${cmd} started (${(0,import_util9.repr)(cmd.command)})`);if(p.stdin){if(cmd.stdin instanceof Buffer){const r=new import_stream.PassThrough;r.end(cmd.stdin);r.pipe(p.stdin);p.stdin=null}else if(stdinStreamNeedsPiping){stdinStreamNeedsPiping.pipe(p.stdin);p.stdin=null}}if(!p.stdin&&!p.stdout&&!p.stderr&&p.stdio.length<4){return null}const cmdio={stdin:p.stdin?createWriter(p.stdin):null,stdout:p.stdout?createReader(p.stdout):null,stderr:p.stderr?createReader(p.stderr):null,extraFiles:p.stdio.slice(3).map(stream=>isReadableStream(stream)?createReader(stream):isWritableStream(stream)?createWriter(stream):null)};return cmdio};function guessSpawnError(cmd){let code="";let msg="unspecified error";if(cmd.shell==false){try{fs6.accessSync(cmd.dir,fs6.constants.R_OK|fs6.constants.X_OK);const st=fs6.statSync(cmd.command);if((st.mode&fs6.constants.S_IFREG)==0){code="EACCES"}else{code="EIO"}}catch(err){code=err.code||"ENOENT"}msg=errorCodeMsg(code)||msg}if(!code){try{fs6.accessSync(cmd.dir,fs6.constants.R_OK|fs6.constants.X_OK);code="EIO"}catch(err){code=err.code||"ENOENT"}msg=errorCodeMsg(code)||msg;if(code){msg=msg+"; cmd.dir="+(0,import_util9.repr)(cmd.dir)}}if(!code){code="UNKNOWN"}const e=new Error(`failed to spawn process ${(0,import_util9.repr)(cmd.command)} (${code} ${msg})`);e.code=code;return e}var fs7=__toModule(require("fs"));var os2=__toModule(require("os"));var _listenermap=new Map;function addListener(sig,f){const logerr=msg=>fs7.writeSync(process.stderr.fd,msg+"\n");let ent=_listenermap.get(sig);if(ent){ent.listeners.add(f)}else{const listeners=new Set([f]);const rootListener=sig2=>{if(sig2=="SIGINT"){fs7.writeSync(1,"\n")}logerr(`[signal.ts] calling ${listeners.size} registered listeners`);try{for(let f2 of listeners){f2(sig2)}}catch(err){logerr(`error in signal listener: ${err.stack||err}`)}process.exit(-(os2.constants.signals[sig2]||1))};process.on(sig,rootListener);_listenermap.set(sig,{rootListener,listeners})}}var import_error3=require_error();var _initialized=false;var _deinitialized=false;var _runContexts=new Set;function init(){if(_initialized){return}_initialized=true;process.on("beforeExit",exitCode=>atexit(`process.on beforeExit ${exitCode}`));process.on("exit",exitCode=>atexit(`process.on exit ${exitCode}`));const onsignal=sig=>atexit(`process.on signal ${sig}`);addListener("SIGINT",onsignal);addListener("SIGHUP",onsignal);addListener("SIGTERM",onsignal);addListener("SIGPIPE",onsignal)}function atexit(cause){if(_deinitialized){return}_deinitialized=true;const logerr=msg=>fs8.writeSync(process.stderr.fd,msg+"\n");try{if(1){let runningCount=0;for(let ctx of _runContexts){if(ctx.cmd.running){runningCount++}}if(runningCount>0){logerr(`[DEBUG run.atexit] run.atexit (${cause})`)}}for(let ctx of _runContexts){if(ctx.cmd.running){logerr(`[DEBUG run.atexit] sending SIGTERM to ${ctx.cmd}`);try{ctx.cmd.signal("SIGTERM")}catch(_){}}}_runContexts.clear()}catch(err){logerr(`ignoring error in run.atexit: ${err.stack||err}`)}}function configure(config){if(!config.run){return}log_default.debug(()=>`run.configure run=${(0,import_util10.repr)(config.run)}`);const ctx=new RunContext(config);_runContexts.add(ctx);const onEndNext=config.onEnd;config.onEnd=async(config2,buildResult,bctx)=>{let returnValue=void 0;if(typeof onEndNext=="function"){returnValue=onEndNext(config2,buildResult,bctx);if(returnValue instanceof Promise){returnValue=await returnValue}}await ctx.onEndBuild(buildResult);return returnValue};init()}function waitAll(){return Promise.all(Array.from(_runContexts).map(ctx=>ctx.cmd.promise)).then(exitCodes=>exitCodes.reduce((a,c)=>Math.max(a,c),0))}var RunContext=class{constructor(config){this._logOnExit=true;this.config=config;this.cmd=new Cmd("");this.cmd.stdout="inherit";this.cmd.stderr="inherit";this.cmd.env["ESTRELLA_PATH"]=__filename;this.cmd.env["ESTRELLA_VERSION"]="0.0.0-rescue";if(typeof config.run=="string"){this.cmd.command=config.run;this.cmd.shell=true;this.cmdname=config.run}else if(typeof config.run=="boolean"){if(!config.outfile){throw new import_error3.UserError(`please set config.outfile=<file> or config.run=<file>`)}this.cmd.command=process.execPath;this.cmd.args=[config.outfileAbs];this.cmdname=config.outfile}else{if(!config.run||config.run.length==0){throw new import_error3.UserError("config.run is an empty list")}this.cmd.command=config.run[0];this.cmd.args=config.run.slice(1);this.cmdname=config.run.join(" ");if(this.cmdname.length>60){this.cmdname=this.cmdname.substr(0,57)+"..."}}}async onEndBuild(buildResult){if(buildResult.errors.length>0){return}const cmd=this.cmd;const style=stdoutStyle.pink;const restart=cmd.running;if(cmd.running){this._logOnExit=false;log_default.debug(()=>`Stopping ${this.cmdname} [${cmd.pid}] ...`);await cmd.kill()}log_default.debug(()=>`Starting command ${(0,import_util10.repr)([cmd.command,...cmd.args])}`);cmd.start();if(this.config.watch){log_default.info(()=>style(`${restart?"Restarted":"Running"} ${this.cmdname} [${cmd.pid}]`));this._logOnExit=true;cmd.promise.then(exitCode=>{this._logOnExit&&log_default.info(()=>style(`${this.cmdname} exited (${exitCode})`))})}}};var import_util11=__toModule(require_util());function createTSAPI(tsapi2){let ts=tsapi2;if(!ts){log_default.debug("typescript API requested; attempting to load typescript module");try{const X=require;ts=X("typescript");if(parseFloat(ts.versionMajorMinor)<3.5){log_default.warn(`typescript ${ts.version} is too old; disabling "ts" API.
  You are seeing this message because you are importing the ts API.
  Either install a more recent version of typescript or remove the ts import.`);return null}log_default.debug(()=>`loaded typescript ${ts.version} from ${(0,import_util11.tildePath)(X.resolve("typescript"))}`)}catch(_){log_default.debug(()=>`failed to load typescript; module unavailable`);return null}}const compilerHostCache=new Map;function getCompilerHost(options){const cacheKey=(0,import_util11.json)(Object.keys(options).sort().map(k=>[k,options[k]]));const cacheEntry=compilerHostCache.get(cacheKey);if(cacheEntry){log_default.debug("ts.getCompilerHost cache hit");return cacheEntry}options={newLine:ts.NewLineKind.LineFeed,...options};const host=ts.createCompilerHost(options,true);const result=[host,options];compilerHostCache.set(cacheKey,result);log_default.debug("ts.getCompilerHost cache miss");return result}async function parse(source,options){const sources=typeof source=="string"?{"/<source>/a.ts":source}:source;const filenames=Object.keys(sources);const[host,compilerOptions]=getCompilerHost(options||{});const readFile=host.readFile;host.readFile=filename=>{if(filename in sources){return sources[filename]}return readFile(filename)};const prog2=ts.createProgram(filenames,compilerOptions,host);if(typeof source=="string"){return prog2.getSourceFile(filenames[0])}const nodes={};for(let fn of filenames){nodes[fn]=prog2.getSourceFile(fn)}return nodes}async function parseFile(srcfile,options){return _parsefile(srcfile,options)}function _parsefile(srcfile,options){const[host,compilerOptions]=getCompilerHost(options||{});const prog2=ts.createProgram([srcfile],compilerOptions,host);const file2=prog2.getSourceFile(srcfile);if(!file2){throw new Error(`${srcfile}: file not found`)}return file2}function interfaceInfo(srcfile,interfaceName,options){return interfacesInfo(srcfile,[interfaceName],options).then(v=>v[0])}async function interfacesInfo(srcfile,interfaceNames,options){const file2=_parsefile(srcfile,options);return interfacesInfoAST(file2,interfaceNames)}function interfacesInfoAST(file2,interfaceNames){const ifdecls=topLevelInterfaceDeclarations(file2);const shortCircuit=new Map;const infov=[];for(let name of interfaceNames||ifdecls.keys()){const node=ifdecls.get(name);if(!node){infov.push(null);continue}infov.push(createTSInterface(file2,node,ifdecls,shortCircuit))}return infov}function createTSInterface(file2,ifnode,ifdecls,shortCircuit){const info1=shortCircuit.get(ifnode);if(info1){return info1}const info={heritage:[],name:ifnode.name.escapedText,props:{},computedProps(){const props={};for(let h of info.heritage){Object.assign(props,h.props)}Object.assign(props,info.props);return props},lookupProp(name){let p=info.props[name];if(!p){for(let h of info.heritage){if(p=h.lookupProp(name)){break}}}return p}};shortCircuit.set(ifnode,info);if(ifnode.heritageClauses)for(let hc of ifnode.heritageClauses){for(let t of hc.types){const expr=t.expression;if(ts.isIdentifier(expr)){const heritageNode=ifdecls.get(expr.escapedText);if(heritageNode){info.heritage.push(createTSInterface(file2,heritageNode,ifdecls,shortCircuit))}}}}ifnode.forEachChild(n=>{if(ts.isPropertySignature(n)){const prop=createTSTypeProp(n,file2,info);info.props[prop.name]=prop}});return info}function createTSTypeProp(n,file2,parent){const pos=ts.getLineAndCharacterOfPosition(file2,n.pos);let _typestr=null;const _type=n.type;const name=propName(n.name);const typeprop={name,type:_type,get typestr(){if(_typestr===null){_typestr=_type?fmt(_type,file2):"any"}Object.defineProperty(typeprop,"typestr",{enumerable:true,value:_typestr});return _typestr},srcfile:file2.fileName,srcline:pos.line,srccol:pos.character,parent};return typeprop}function propName(n){switch(n.kind){case ts.SyntaxKind.Identifier:case ts.SyntaxKind.PrivateIdentifier:return n.escapedText;case ts.SyntaxKind.StringLiteral:case ts.SyntaxKind.NumericLiteral:return n.text;case ts.SyntaxKind.ComputedPropertyName:return"[computed]";default:return"?"}}function topLevelInterfaceDeclarations(file2){const m=new Map;ts.forEachChild(file2,n=>{if(n.kind==ts.SyntaxKind.InterfaceDeclaration){m.set(n.name.escapedText,n)}else{}});return m}const basicPrinter=ts.createPrinter({removeComments:true,newLine:ts.NewLineKind.LineFeed,omitTrailingSemicolon:true,noEmitHelpers:true});function fmt(node,file2){if(!file2){let n=node;while(n.kind!=ts.SyntaxKind.SourceFile){n=n.parent;if(!n){throw new Error("node without SourceFile parent (provide file to ts.fmt)")}}file2=n}return basicPrinter.printNode(ts.EmitHint.Unspecified,node,file2)}return{ts,getCompilerHost,parse,parseFile,interfaceInfo,interfacesInfo,interfacesInfoAST,fmt}}var esbuild={version:"0.11.20",BuildOptions:new Set(["sourcemap","legalComments","sourceRoot","sourcesContent","format","globalName","target","minify","minifyWhitespace","minifyIdentifiers","minifySyntax","charset","treeShaking","jsxFactory","jsxFragment","define","pure","avoidTDZ","keepNames","banner","footer","color","logLevel","errorLimit","bundle","splitting","outfile","metafile","outdir","outbase","platform","external","loader","resolveExtensions","mainFields","write","allowOverwrite","tsconfig","outExtension","publicPath","entryNames","chunkNames","assetNames","inject","incremental","entryPoints","stdin","plugins"])};var estrella={BuildConfig:new Set(["entry","debug","watch","cwd","quiet","silent","clear","tslint","onStart","onEnd","outfileMode","run","tsc","tsrules","title"])};var filepath=__toModule(require("path"));var crypto2=__toModule(require("crypto"));function sha12(input,outputEncoding){const h=crypto2.createHash("sha1").update(input);return outputEncoding?h.digest(outputEncoding):h.digest()}var import_util12=__toModule(require_util());function entryPointsMapToList(entryPointsMap){return Object.keys(entryPointsMap).map(k=>k+":"+entryPointsMap[k])}function createBuildConfig(userConfig,defaultCwd){let buildIsCancelled=false;let outfileIsTemporary=false;let outfileCopyToStdout=false;let metafileIsTemporary=false;let outfileAbs="";function computeProjectID(config2){const projectKey=[config2.cwd,config2.outfile||"",...Array.isArray(config2.entryPoints)?config2.entryPoints:typeof config2.entryPoints=="object"?entryPointsMapToList(config2.entryPoints):config2.entryPoints?[config2.entryPoints]:[]].join(filepath.delimiter);return base36EncodeBuf(sha12(Buffer.from(projectKey,"utf8")))}let projectID="";const config=Object.create({get outfileAbs(){return outfileAbs},setOutfile(outfile){config.outfile=outfile;outfileAbs=outfile&&outfile!="-"?filepath.resolve(config.cwd,outfile):""},get projectID(){return projectID},updateProjectID(){projectID=computeProjectID(config);return projectID},get buildIsCancelled(){return buildIsCancelled},set buildIsCancelled(y){buildIsCancelled=y},get outfileIsTemporary(){return outfileIsTemporary},set outfileIsTemporary(y){outfileIsTemporary=y},get outfileCopyToStdout(){return outfileCopyToStdout},set outfileCopyToStdout(y){outfileCopyToStdout=y},get metafileIsTemporary(){return metafileIsTemporary},set metafileIsTemporary(y){metafileIsTemporary=y}});Object.assign(config,userConfig);config.cwd=userConfig.cwd?filepath.resolve(userConfig.cwd):!import_util12.isCLI&&process.mainModule?process.mainModule.path:defaultCwd;config.setOutfile(userConfig.outfile||"");config.updateProjectID();return config}function base36EncodeBuf(buf){let s="";for(let i=0;i<buf.length;i+=4){s+=buf.readUInt32LE(i).toString(36)}return s}var{dirname:dirname4,basename:basename4}=Path6;var CLI_DOC={usage:"usage: $0 [options]",flags:[["-w, watch","Watch source files for changes and rebuild."],["-g, debug","Do not optimize and define DEBUG=true."],["-r, run","Run the output file after a successful build."],["-sourcemap","Generate sourcemap."],["-inline-sourcemap","Generate inline sourcemap."],["-no-color","Disable use of colors."],["-no-clear","Disable clearing of the screen, regardless of TTY status."],["-no-diag","Disable TypeScript diagnostics."],["-color","Color terminal output, regardless of TTY status."],["-diag","Only run TypeScript diagnostics (no esbuild.)"],["-quiet","Only log warnings and errors but nothing else."],["-silent","Don't log anything, not even errors."],["-estrella-version","Print version of estrella and exit 0."],["-estrella-debug","Enable debug logging of estrella itself."]]};var CLI_DOC_STANDALONE={usage:"usage: $0 [options] <srcfile> ...",flags:CLI_DOC.flags.concat([["-o, outfile","Write output to <file> instead of stdout.","<file>"],["-bundle","Include all dependencies."],["-minify","Simplify and compress generated code."],["-outdir","Write output to <dir> instead of stdout.","<dir>"],["-esbuild","Pass arbitrary JSON to esbuild's build function.","<json>"]]),trailer:`
<srcfile> is a filename, or "-" for stdin.

Example of using estrella without a build script:
  $0 -o out/app.js main.ts
    This compile main.ts and writes the output to out/app.js

Example of using estrella with a build script:
  1. Create a file called build.js with the following contents:
       #!/usr/bin/env node
       const { build } = require("estrella")
       build({
         entry: "main.ts",
         outfile: "out/main.js",
       })
  2. Make that file executable and run it:
       chmod +x build.js
       ./build.js
  You can now customize your build behavior by changing build.js.
  Try ./build.js -help

See https://github.com/rsms/estrella#readme for documentation.
  `};var cli_ready=Promise.resolve();var cliopts={};var cliargs=[];var IS_MAIN_CALL=Symbol("IS_MAIN_CALL");var _setErrorExitCode=false;function setErrorExitCode(code){if(!_setErrorExitCode){_setErrorExitCode=true;let overrideCode=code||1;process.exitCode=overrideCode;process.on("exit",code2=>{process.exit(code2||overrideCode)})}}function len(v){switch(typeof v){case"object":if(Array.isArray(v))return v.length;return Object.keys(v).length;case"string":return v.length;default:return 0}}function processAPIConfig(config){log_default.debug(()=>`input config ${(0,import_util13.repr)(config)}`);if(!config.entryPoints){config.entryPoints=[]}if(config.entry){if(Array.isArray(config.entry)){config.entryPoints=config.entryPoints.concat(config.entry)}else if(typeof config.entry=="object"){if(config.entryPoints.length!=0){throw new import_error4.UserError(`Both config.entryPoints and .entry can not be set when .entry is an object`)}config.entryPoints=config.entry}else{config.entryPoints.push(config.entry)}}delete config.entry;const nentries=len(config.entryPoints);if(nentries==0&&!config.stdin){log_default.debug(()=>`missing entryPoints; attempting inference`);config.entryPoints=guessEntryPoints(config);if(config.entryPoints.length==0){let msg=getTSConfigForConfig(config)?" (could not guess from tsconfig.json)":"";throw new import_error4.UserError(`config.entryPoints is empty or not set${msg}`)}}if(config.sourcemap){if(config.sourcemap!="inline"&&config.sourcemap!="external"){config.sourcemap=true}}else{config.sourcemap=false}if(!config.outfile&&!config.outdir){config.setOutfile("-");const projectID=config.updateProjectID();config.setOutfile(Path6.join((0,import_util13.tmpdir)(),`esbuild.${projectID}.out.js`));config.outfileIsTemporary=true}config.updateProjectID();log_default.debug(()=>`effective config for project#${config.projectID}: ${(0,import_util13.repr)(config)}`)}function patchSourceMap(mapfile,overrides){const timeStarted=(0,import_util13.clock)();const map=JSON.parse(fs9.readFileSync(mapfile));for(let k in overrides){let v=overrides[k];if(v===void 0){delete map[k]}else{if(typeof v=="function"){v=v(map[k])}map[k]=v}}fs9.writeFileSync(mapfile,JSON.stringify(map));log_default.debug(()=>`patched source map ${mapfile} with overrides ${(0,import_util13.repr)(overrides)} (${(0,import_util13.fmtDuration)((0,import_util13.clock)()-timeStarted)})`)}function guessEntryPoints(config){const tsconfig=getTSConfigForConfig(config);if(tsconfig){log_default.debug(()=>`tsconfig file found at ${getTSConfigFileForConfig(config)}`);if(tsconfig.files){return tsconfig.files}if(tsconfig.include){let files=[];for(let pat of tsconfig.include){log_default.debug(`guessing entry points: glob.glob(${pat}) =>`,glob.glob(pat));files=files.concat(glob.glob(pat))}if(tsconfig.exclude){for(let pat of tsconfig.exclude){files=files.filter(fn=>!glob.match(pat,fn))}}return files.slice(0,1)}}return[]}function esbuildOptionsFromConfig(config){let esbuildOptions={};let unknownOptions={};const esbuildOptionKeyMap={name:"globalName"};for(let k of Object.keys(config)){if(estrella.BuildConfig.has(k)){continue}if(!esbuild.BuildOptions.has(k)){unknownOptions[k]=config[k]}k=esbuildOptionKeyMap[k]||k;esbuildOptions[k]=config[k]}if(Object.keys(unknownOptions).length>0){log_default.info(`Notice: Potentially invalid esbuild.BuildOption(s): ${(0,import_util13.repr)(unknownOptions)}
`+(0,import_error4.bugReportMessage)("guess",(0,import_util13.json)(Object.keys(unknownOptions))))}if(!esbuildOptions.outfile){delete esbuildOptions.outfile}return esbuildOptions}var _logInfoOnceRecord=new Set;function logInfoOnce(...v){if(log_default.level>=log_default.INFO){const k=v.join(" ");if(!_logInfoOnceRecord.has(k)){_logInfoOnceRecord.add(k);log_default.info(...v)}}}function build2(config){config=createBuildConfig(config||{},config[IS_MAIN_CALL]?process.cwd():process.mainModule&&dirname4(process.mainModule.filename)||__dirname);const resolver={resolve(){},reject(){}};const cancelCallbacks=[];function addCancelCallback(f){if(config.isCancelled){f()}else{cancelCallbacks.push(f)}}function cancel(reason){if(!config.isCancelled){log_default.debug(`build cancelled`,{reason});config.isCancelled=true;for(let f of cancelCallbacks){f&&f()}cancelCallbacks.length=0;if(reason){resolver.reject(reason)}else{resolver.resolve(true)}}}let ctx={addCancelCallback,buildCounter:0,rebuild(){log_default.warn("rebuild() called before initial build completed. Ignoring");return Promise.resolve(true)}};const p=cli_ready.then(()=>new Promise((resolve3,reject)=>{if(config.isCancelled){log_default.debug(`build cancelled immediately`);return false}resolver.resolve=resolve3;resolver.reject=reject;build1(config,ctx).then(resolve3).catch(reject)}));p.rebuild=()=>ctx.rebuild();Object.defineProperty(p,"buildCounter",{get(){return ctx.buildCounter}});p.cancel=cancel;return p}async function build1(config,ctx){const isMainCall=IS_MAIN_CALL in config;delete config[IS_MAIN_CALL];let opts=cliopts,args=cliargs;if(config.run===void 0){config.run=opts.run}if(config.outfile=="-"||opts.outfile=="-"||isMainCall&&!opts.outfile&&!opts.outdir){config.setOutfile("-");const projectID=config.updateProjectID();opts.outfile=Path6.join((0,import_util13.tmpdir)(),`esbuild.${projectID}.out.js`);config.setOutfile(opts.outfile);config.outfileIsTemporary=true;config.outfileCopyToStdout=true}if(!isMainCall){processAPIConfig(config)}else{if(args.length==0){if(!process.stdin.isTTY){args=["-"]}else{const guess=guessEntryPoints(config);log_default.debug(()=>`no input files provided; best guess: ${(0,import_util13.repr)(guess)}`);if(guess.length==0){log_default.error(`missing <srcfile> argument (see ${prog} -help)`);process.exit(1)}args.splice(args.length-1,0,...guess);const tsconfig=getTSConfigForConfig(config);if(!opts.outfile&&!opts.outdir&&tsconfig){opts.outfile=tsconfig.outFile;if(!opts.outfile){opts.outdir=tsconfig.outDir}}if(args.length==0){log_default.error(`missing <srcfile> argument (see ${prog} -help)`);process.exit(1)}}}args=args.filter(a=>{if(a!="-"){return true}if(!config.stdin){config.stdin={contents:fs9.readFileSync(0,"utf8"),sourcefile:"stdin",resolveDir:process.cwd(),loader:"ts"}}return false});config.setOutfile(opts.outfile||void 0);args.length>0&&(config.entryPoints=args);opts.outdir&&(config.outdir=opts.outdir);opts.bundle&&(config.bundle=opts.bundle);opts.minify&&(config.minify=opts.minify);if(opts.esbuild){const esbuildProps=(0,import_util13.jsonparse)(opts.esbuild,"-esbuild");if(!esbuildProps||typeof esbuildProps!="object"){log_default.error(`-esbuild needs a JS object, for example '{key:"value"}'. Got ${typeof esbuildProps}.`);return false}log_default.debug(()=>`applying custom esbuild config ${(0,import_util13.repr)(esbuildProps)}`);for(let k in esbuildProps){config[k]=esbuildProps[k]}}}const debug2=config.debug=opts.debug=!!(opts.debug||config.debug);const silent=config.silent=opts.silent=!!(opts.silent||config.silent);const quiet=config.quiet=opts.quiet=silent||!!(opts.quiet||config.quiet);opts.watch=!!(opts.watch||config.watch);if(!config.watch||typeof config.watch!="object"){config.watch=opts.watch}if(config.color!==void 0){log_default.colorMode=config.color;stdoutStyle.reconfigure(process.stdout,config.color);stderrStyle.reconfigure(process.stderr,config.color)}if(quiet&&log_default.level<log_default.DEBUG){log_default.level=silent?log_default.SILENT:log_default.WARN}config.sourcemap=opts["inline-sourcemap"]?"inline":opts.sourcemap?true:config.sourcemap;if(config.outfileIsTemporary&&config.outfileCopyToStdout&&config.sourcemap===true){config.sourcemap="inline"}config.clear=opts["no-clear"]?false:config.clear===void 0?!!process.stdout.isTTY:config.clear;log_default.debug(()=>`project directory ${(0,import_util13.repr)(config.cwd)} (config.cwd)`);if(!config.title){config.title=config.name||(0,import_util13.tildePath)(config.cwd)}let tslintOptions=opts.diag===true?"on":opts.diag===false?"off":"auto";if(tslintOptions!=="off"&&(!config.entryPoints||len(config.entryPoints)==0)){log_default.debug(`disabling tslint (no entryPoints)`);tslintOptions="off"}else if(tslintOptions!=="off"){if(config.tsc!==void 0){log_default.info("the 'tsc' property is deprecated. Please rename to 'tslint'.");if(config.tslint===void 0){config.tslint=config.tsc}}if(config.tslint&&config.tslint!=="auto"){tslintOptions=config.tslint}const tslintIsAuto=tslintOptions==="auto"||typeof tslintOptions=="object"&&(config.tslint.mode==="auto"||!config.tslint.mode);if(tslintIsAuto){if(!getTSConfigFileForConfig(config)){log_default.debug(()=>{const dir=tsConfigFileSearchDirForConfig(config);const searchfiles=Array.from(searchTSConfigFile(dir,config.cwd));return`skipping tslint in auto mode since no tsconfig.json file was found in project.
Tried the following filenames:${searchfiles.map(f=>`
  ${(0,import_util13.tildePath)(f)}`)}`});tslintOptions="off"}}else if(config.tslint!==void 0&&config.tslint!=="auto"){tslintOptions=config.tslint}}if(config.run){configure(config)}let lastClearTime=0;function clear(){screen.clear();lastClearTime=(0,import_util13.clock)()}let isInsideCallToUserOnEnd=false;const userOnEnd=config.onEnd;let onEnd=userOnEnd?async(buildResults,defaultReturn)=>{isInsideCallToUserOnEnd=true;let returnValue=void 0;try{const r=userOnEnd(config,buildResults,ctx);returnValue=r instanceof Promise?await r:r}catch(err){log_default.debug(()=>`error in onEnd handler: ${err.stack||err}`);throw err}finally{isInsideCallToUserOnEnd=false}const ok2=returnValue===void 0?defaultReturn:!!returnValue;return ok2}:(_buildResults,ok2)=>{return ok2};function wrapOnEnd(f){let onEndInner=onEnd;onEnd=async(buildResults,ok2)=>{const ok22=await f(buildResults,ok2);if(ok22!==void 0){ok2=ok22}return onEndInner(buildResults,ok2)}}if(config.outfileMode&&config.outfile){wrapOnEnd(async(buildResults,ok2)=>{log_default.debug("onEnd chmod");if(buildResults.errors.length==0){try{chmod2(config.outfileAbs,config.outfileMode)}catch(err){log_default.error("configuration error: outfileMode: "+err.message);setErrorExitCode(1)}}})}if(config.outfileCopyToStdout&&!config.run&&config.write!==false){wrapOnEnd(async(buildResults,ok2)=>{log_default.debug("onEnd copyToStdout");if(buildResults.errors.length==0){return new Promise((resolve3,reject)=>{const r=fs9.createReadStream(config.outfileAbs);r.on("end",()=>resolve3(ok2));r.on("error",reject);r.pipe(process.stdout)})}})}if(config.outfileIsTemporary&&!config.outfileCopyToStdout&&config.write!==false){wrapOnEnd(async(buildResults,ok2)=>{log_default.debug("onEnd load results");buildResults.js=fs9.readFileSync(config.outfile,{encoding:"utf8"});if(config.sourcemap===true){try{buildResults.map=fs9.readFileSync(config.outfile+".map",{encoding:"utf8"})}catch(err){log_default.debug(`failed to load temporary source map at ${config.outfile}.map: ${err.stack||err}`)}const i=buildResults.js.lastIndexOf("\n//# sourceMappingURL");if(i!=-1){buildResults.js=buildResults.js.substr(0,i+1)}}})}if(config.watch){wrapOnEnd(async(buildResults,ok2)=>{logInfoOnce("Watching files for changes...")})}let define={DEBUG:debug2?"true":"false",...config.define||{}};const esbuildOptions={minify:!debug2,sourcemap:config.sourcemap,sourcesContent:false,color:stderrStyle.ncolors>0,logLevel:log_default.level==log_default.DEBUG?"info":config.silent?"silent":config.quiet?"error":"warning",...esbuildOptionsFromConfig(config),define};let esbuildResult=null;let lastBuildResults={warnings:[],errors:[],metafile:null};if(config.watch){const projectID=config.projectID;esbuildOptions.incremental=true;esbuildOptions.metafile=true;if(!esbuildOptions.outfile&&!esbuildOptions.outdir||esbuildOptions.write===false){esbuildOptions.outfile=Path6.join((0,import_util13.tmpdir)(),`esbuild.${projectID}.out.js`);config.outfileIsTemporary=true;delete esbuildOptions.write}ctx.addCancelCallback(()=>{if(esbuildResult&&esbuildResult.rebuild){esbuildResult.rebuild.dispose()}});if(config.entryPoints&&len(config.entryPoints)>0){lastBuildResults.metafile={inputs:{},outputs:{}};if(Array.isArray(config.entryPoints)){for(let f of config.entryPoints){lastBuildResults.metafile.inputs[f]={}}}else{for(let outfile of Object.keys(config.entryPoints)){let f=config.entryPoints[outfile];lastBuildResults.metafile.inputs[f]={}}}}}ctx.rebuild=()=>{return _esbuild([]).then(ok2=>{if(isInsideCallToUserOnEnd){log_default.warn(`waiting for rebuild() inside onEnd handler may cause a deadlock`)}return ok2})};function onBuildSuccess(timeStart,result){log_default.debug("esbuild finished with result",result);esbuildResult=result;logWarnings(result.warnings||[]);const time=(0,import_util13.fmtDuration)((0,import_util13.clock)()-timeStart);if(!config.outfile){log_default.info(stdoutStyle.green(config.outdir?`Wrote to dir ${config.outdir} (${time})`:`Finished (write=false, ${time})`))}else{let outname=config.outfile;if(config.sourcemap&&config.outfileIsTemporary&&config.sourcemap!="inline"&&config.write!==false){patchSourceMap(config.outfileAbs+".map",{sources:v=>v&&v.map(fn=>Path6.relative(config.cwd,fn))})}let size=0;try{size=fs9.statSync(config.outfileAbs).size}catch(_){}if(!config.outfileIsTemporary){log_default.info(stdoutStyle.green(`Wrote ${outname}`)+` (${(0,import_util13.fmtByteSize)(size)}, ${time})`)}}lastBuildResults.warnings=result.warnings;lastBuildResults.errors=[];lastBuildResults.metafile=result.metafile||null;return onEnd(lastBuildResults,true)}let isInitialBuild=true;function onBuildFail(timeStart,err){log_default.debug("esbuild finished with error:",err?err.stack||err:null);let warnings=err.warnings||[];let errors=err.errors||[];if(errors.length==0){log_default.error(err.message);errors.push({text:String(err),location:null})}logWarnings(warnings);lastBuildResults.warnings=warnings;lastBuildResults.errors=errors;if(!isInitialBuild){lastBuildResults.metafile=null}else{isInitialBuild=false}return onEnd(lastBuildResults,false)}async function _esbuild(fileEvents){if(config.watch&&config.clear){clear()}let changedFiles=[];for(let f of fileEvents){if(f.type=="move"){let didModifyEntryPoints=false;if(Array.isArray(config.entryPoints)){const i=config.entryPoints?config.entryPoints.indexOf(f.name):-1;if(i!=-1){log_default.debug("detected entryPoint file rename",f.name,"->",f.newname);config.entryPoints[i]=f.newname;didModifyEntryPoints=true}}else{for(let outfile of Object.keys(entryPoints)){let infile=entryPoints[outfile];if(infile==f.name){entryPoints[outfile]=f.newname;didModifyEntryPoints=true;break}}}if(didModifyEntryPoints){esbuildOptions.entryPoints=config.entryPoints;esbuildResult=null}changedFiles.push(f.newname)}else{changedFiles.push(f.name)}}config.entry=config.entryPoints;if(config.onStart){try{const r=config.onStart(config,changedFiles,ctx,esbuildOptions);if(r instanceof Promise){await r}}catch(err){log_default.debug(()=>`error in onStart handler: ${err.stack||err}`);throw err}}if(config.isCancelled){return}const rebuild=!!(esbuildResult&&esbuildResult.rebuild);log_default.debug(()=>`invoking ${rebuild?"esbuildResult.rebuild":"esbuild.build"} in ${process.cwd()} with options: ${(0,import_util13.repr)(esbuildOptions)}`);const tmpcwd=process.cwd();process.chdir(config.cwd);const esbuildPromise=rebuild?esbuildResult.rebuild():esbuild2.build(esbuildOptions);process.chdir(tmpcwd);return esbuildPromise.then(onBuildSuccess.bind(null,(0,import_util13.clock)()),onBuildFail.bind(null,(0,import_util13.clock)()))}const buildPromise=opts.diag?null:_esbuild([]);const[tslintProcess,tslintProcessReused]=tslintOptions!=="off"?startTSLint(tslintOptions,opts,config):[null,false];if(tslintProcess&&!tslintProcessReused){tslintProcess.catch(e=>{log_default.error(e.stack||String(e));return false});ctx.addCancelCallback(()=>{tslintProcess.cancel()});if(cliopts.diag&&config.watch&&config.clear){screen.clear()}}let ok=true;if(buildPromise){log_default.debug("awaiting esbuild");ok=await buildPromise;if(config.isCancelled){return false}}if(config.watch){let getESBuildMeta=function(){return lastBuildResults.metafile};await watch().watchFiles(config,getESBuildMeta,ctx,fileEvents=>{const n=fileEvents.length;const fv=fileEvents.map(f=>f.type=="move"?f.newname:f.name);log_default.info(`${n} ${n>1?"files":"file"} changed: ${fv.join(", ")}`);return _esbuild(fileEvents)});log_default.debug("fswatch ended");return true}if(tslintProcess){let tscWaitTimer=null;if(!ok){log_default.debug("cancelling eslint since esbuild reported an error");tslintProcess.cancel()}else{log_default.debug("awaiting eslint");if(!tslintProcessReused&&!opts.diag){tscWaitTimer=setTimeout(()=>log_default.info("Waiting for TypeScript... (^C to skip)"),1e3)}ok=await tslintProcess.catch(()=>false)}clearTimeout(tscWaitTimer)}if(!config.isCancelled&&!ok){setErrorExitCode()}if(ok){const exitCode=await waitAll();process.exitCode=exitCode}return ok}var tslintProcessCache=new Map;function startTSLint(tslintOptions,cliopts2,config){let mode=tslintOptions;let tscBasicOptions={};if(tslintOptions&&typeof tslintOptions=="object"){mode=void 0;tscBasicOptions=tslintOptions;if(tscBasicOptions.mode=="off"){log_default.debug(()=>`tslint disabled by tslint config {mode:"off"}`);return[null,false]}}if(config.tsrules&&config.tsrules.length){log_default.info("The 'tsrules' property is deprecated. Please use 'tslint.rules' instead");tscBasicOptions.rules={...config.tsrules,...tscBasicOptions.rules}}const clearScreen=cliopts2.diag&&config.watch&&config.clear;const tsconfigFile=getTSConfigFileForConfig(config);const cacheKey=`${tsconfigFile||config.cwd}`;const existingTSLintProcess=tslintProcessCache.get(cacheKey);if(existingTSLintProcess){log_default.debug(()=>`tslint sharing process (no new process created)`);return[existingTSLintProcess,true]}let srcdir=config.cwd;if(config.entryPoints){if(Array.isArray(config.entryPoints)){if(config.entryPoints.length>0){srcdir=dirname4(config.entryPoints[0])}}else{for(let outfile of Object.keys(config.entryPoints)){srcdir=dirname4(config.entryPoints[outfile]);break}}}const options={colors:stdoutStyle.ncolors>0,quiet:config.quiet,mode,...tscBasicOptions,watch:config.watch,cwd:config.cwd,clearScreen,srcdir,tsconfigFile,onRestart(){log_default.debug("tsc restarting")}};log_default.debug(()=>`starting tslint with options ${(0,import_util13.repr)(options)}`);const tslintProcess=tslint(options);tslintProcessCache.set(cacheKey,tslintProcess);return[tslintProcess,false]}function logWarnings(warnings){if(warnings.length>0){log_default.warn("[warn] "+warnings.map(m=>m.text).join("\n"))}}function main(){return build2({[IS_MAIN_CALL]:1}).catch(e=>{console.error(stderrStyle.red(prog+": "+(e?e.stack||e:"error")));const exitCode=process.exitCode||0;process.exit(exitCode>0?exitCode:1)}).then(ok=>{const exitCode=process.exitCode||0;process.exit(ok?exitCode:exitCode>0?exitCode:1)})}function postProcessCLIOpts(){if(cliopts["no-color"]){cliopts.color=false}if(cliopts["no-diag"]){cliopts.diag=false}log_default.colorMode=cliopts.color;stdoutStyle.reconfigure(process.stdout,cliopts.color);stderrStyle.reconfigure(process.stderr,cliopts.color);if(cliopts.color!==void 0){}if(cliopts["estrella-version"]){console.log(`estrella ${"0.0.0-rescue"}${1?" (debug)":""}`);process.exit(0)}if(cliopts["estrella-debug"]){log_default.level=log_default.DEBUG}if(cliopts.diag&&cliopts.run){log_default.info(`Disabling -run since -diag is set`);cliopts.run=void 0}log_default.debug(()=>`Parsed initial CLI arguments: ${(0,import_util13.repr)({options:cliopts,args:cliargs},2)}`)}if(import_util13.isCLI){;[cliopts,cliargs]=parseopt(process.argv.slice(2),CLI_DOC_STANDALONE);postProcessCLIOpts();main()}else{;[cliopts,cliargs]=parseopt(process.argv.slice(2),{...CLI_DOC,unknownFlagAsArg:true,help(flags,_cliopts,_cliargs){cli_ready=new Promise(resolve3=>{process.nextTick(()=>{console.log(fmtUsage(flags,CLI_DOC.usage,CLI_DOC.trailer));process.exit(0);resolve3()})})}});postProcessCLIOpts();if(cliargs.length>0){cli_ready.then(()=>{if(cliargs.length>0){printUnknownOptionsAndExit(cliargs)}})}cliopts.parse=(...flags)=>{log_default.debug(()=>`Parsing custom CLI arguments ${(0,import_util13.json)(cliargs.join)} via cliopts.parse(`+(0,import_util13.repr)(flags)+")");const optsAndArgs=parseopt(cliargs,{...CLI_DOC,flags:CLI_DOC.flags.concat(flags)});log_default.debug(()=>`Parsed extra CLI arguments: `+(0,import_util13.json)({options:optsAndArgs[0],args:optsAndArgs[1]},2));cliargs.splice(0,cliargs.length);return optsAndArgs}}function watch2(path,options,cb){return watch().watch(path,options,cb)}function legacy_watchdir(path,filter,options,cb){log_default.info(()=>`estrella.watchdir is deprecated. Please use estrella.watch instead`);if(cb===void 0){if(options===void 0){cb=filter;options={}}else{cb=options;options={...options,filter};if(options.recursive!==void 0){if(!options.recursive){options.depth=0}delete options.recursive}}}return watch2(path,options,cb)}var _tsapiInstance=void 0;module.exports={version:"0.0.0-rescue",prog,cliopts,cliargs,dirname:dirname4,basename:basename4,watch:watch2,watchdir:legacy_watchdir,scandir,tslint,defaultTSRules,termStyle,stdoutStyle,stderrStyle,chmod:file.chmod,editFileMode:file.editMode,fmtDuration:import_util13.fmtDuration,tildePath:import_util13.tildePath,findInPATH:import_util13.findInPATH,tsconfig:getTSConfigForConfig,tsconfigFile:getTSConfigFileForConfig,glob:glob.glob,globmatch:glob.match,file,sha1:sha12,log:log_default,get ts(){if(_tsapiInstance===void 0){_tsapiInstance=createTSAPI()}return _tsapiInstance},build:build2};
//# sourceMappingURL=estrella.js.map
